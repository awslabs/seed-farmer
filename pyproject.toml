[project]
name = "seed-farmer"
version = "7.1.0.dev0"
description = "The AWS Professional Services CLI tool SeedFarmer for GitOps support"
authors = [{ name = "AWS Professional Services" }]
requires-python = ">=3.9, <3.14"
readme = "README.md"
license = {text = "Apache-2.0"}
license-files = ["LICENSE", "NOTICE", "VERSION" ]
keywords = [
    "AWS",
    "GitOps",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = [
  "cookiecutter>=2.1,<2.7",
  "pyhumps>=3.5,<3.9",
  "pydantic>=2.8.2,<2.11.0",
  "executor~=23.2",
  "typing-extensions>=4.6.3",
  "rich>=12.4,<13.10",
  "requests>=2.28,<2.33",
  "python-dotenv>=0.21,<1.1",
  "gitpython~=3.1.30",
  "gitignore-parser~=0.1.2",
  "pyyaml~=6.0.1",
  "urllib3~=1.26.17",
  "certifi>=2024.7.4,<2024.9.0",
  "packaging>=23.2,<25.0",
  "mypy_extensions>=1.1.0",
  "boto3-stubs[cloudformation,cloudwatch,codebuild,iam,logs,s3,sts,ssm,secretsmanager,logs]~=1.38.0",
  "mypy",
  "boto3==1.36.4",
  "botocore==1.36.4",
  "cfn-flip>=1.2.3",
  "click==8.1.8",
  "ruamel.yaml==0.18.14",
]

[dependency-groups]
dev = [
  "awscli>=1.35",
  "certifi~=2024.8.30",
  "check-manifest~=0.50",
  "mypy~=1.14",
  "pip-tools~=7.4.1",
  "pydot~=3.0.4",
  "pyroma~=4.0",
  "pytest~=8.3.4",
  "pytest-cov~=6.0.0",
  "pytest-mock~=3.14.0",
  "pytest-ordering~=0.6",
  "ruff~=0.9.2",
  "twine~=6.1.0",
  "types-PyYAML~=6.0.12",
  "types-requests~=2.31.0.6",
  "types-setuptools~=75.8.0",
  "wheel~=0.44.0",
  "boto3-stubs[codebuild,iam,s3,secretsmanager,ssm,sts]~=1.38.0",
  "moto[s3,sts,iam,codebuild,secretsmanager,ssm]~=5.0.27",
  "requests~=2.32.3",
  "werkzeug>=3.0.6",
]

[project.urls]
"Homepage" = "https://github.com/awslabs/seed-farmer"
"Org Site" = "https://aws.amazon.com/professional-services/"

[project.scripts]
seedfarmer = "seedfarmer.__main__:main"

[tool.hatch.build.targets.sdist]
packages = ["seedfarmer"]
exclude = [
    "*.so",
    "*.pyc",
    "*~",
    "#*",
    ".git*",
    ".coverage*",
    "DS_Store",
    "__pycache__",
]

[tool.hatch.build.targets.wheel]
packages = ["seedfarmer"]
exclude = [
    "*.so",
    "*.pyc",
    "*~",
    "#*",
    ".git*",
    ".coverage*",
    "DS_Store",
    "__pycache__",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    ".venv-uvtest",
    ".env",
    "_build",
    "buck-out",
    "build",
    "dist",
    "codeseeder.out",
    "seedfarmer.out",
    "seedfarmer.gitmodules"
]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = ["E", "W", "F", "I"]
ignore = []
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["E402"]
"test/unit-test/mock_data/*" = ["E501"]

[tool.mypy]
python_version = "3.9"
strict = true
ignore_missing_imports = true
disallow_untyped_decorators = false
exclude = "codeseeder.out/|examples/|modules/|test/|seedfarmer.gitmodules/|seedfarmer.out"

[tool.pytest.ini_options]
markers = [
    "first: marks the first test to run",
    "second: marks the seconds test to run",
    "last: marks the last test to run",
    "apply: marks `seedfarmer apply` tests",
    "apply_working_module: marks `seedfarmer apply` test that creates a functioning module",
    "destroy: marks `seedfarmer destroy` tests",
    "init: marks `seedfarmer init` tests",
    "list: marks all `seedfarmer list` tests",
    "list_deployments: marks all `seedfarmer list deployments` tests",
    "list_deployspec: marks all `seedfarmer list deployspec` tests",
    "list_moduledata: marks all `seedfarmer list moduledata` tests",
    "list_dependencies: marks all `seedfarmer list dependencies` tests",
    "list_modules: marks all `seedfarmer list modules` tests",
    "list_build_env_params: marks all `seedfarmer list buildparams` tests",
    "remove: marks all `seedfarmer remove` tests",
    "store: marks all `seedfarmer store` tests",
    "store_md5: marks all `seedfarmer store` tests",
    "store_deployspec: marks all `seedfarmer store` tests",
    "store_moduledata: marks all `seedfarmer store` tests",
    "models: marks all `models` tests",
    "models_deployment_manifest: marks all `DeploymentManifest` tests",
    "models_module_manifest: marks all `ModuleManifest` tests",
    "models_deployspec: marks all `DeploySpec` tests",
    "models_deployresponses: marks all `DeploymentResponses` tests",
    "utils_test: marks all `utils_test` tests",
    "checksum: marks all `checksum` tests",
    "bootstrap: marks all `commands_bootstrap` tests",
    "mgmt: marks all `mgmt` tests",
    "mgmt_module_info: marks all `mgmt_module_info` tests",
    "mgmt_deployment_utils: marks all `mgmt_deployment_utils` tests",
    "mgmt_deployment_utils_filter: marks all `mgmt_deployment_utils_filter` tests",
    "mgmt_metadata_support: marks all `mgmt_metadata_support` tests",
    "mgmt_build_info: marks all `mgmt_build_info` tests",
    "mgmt_git_support: marks all `mgmt_git_support` tests",
    "mgmt_archive_support: marks all `mgmt_archive_support` tests",
    "service: marks all `services` tests",
    "projectpolicy: marks all `projectpolicy` tests",
    "metadata: marks all `metadata` tests",
    "version: marks all `version` tests",
    "session_manager: marks all `session_manager` tests",
    "commands: marks all `commands` tests",
    "commands_stack: marks all `comands_stacks` tests",
    "commands_parameters: marks all `commands_parameters` tests",
    "commands_modules: marks all `commands_modules` tests",
    "commands_deployment: marks all `commands_deployment` tests",
    "commands_bootstrap: marks all `commands_bootstrap` tests",
]
log_cli_level = "INFO"
addopts = "-v --cov=. --cov-report=term --cov-report=html"
pythonpath = [
  "."
]

[tool.pytest.coverage.run]
omit = [
  "test/*"
]

[tool.coverage.report]
fail_under = 80.0
