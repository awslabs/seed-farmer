AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation for the SeedFarmer Deployment Role

Parameters:
  ProjectName:
    Type: String
    Description: Name of the project
  RoleName:
    Type: String
    Description: Name of the role to create
  RolePrefix:
    Type: String
    Description: Prefix for the role path
    Default: "/"
  PolicyPrefix:
    Type: String
    Description: Prefix for the policy path
    Default: "/"
  ToolchainRoleArn:
    Type: String
    Description: ARN of the toolchain role
  SeedFarmerVersion:
    Type: String
    Description: Version of SeedFarmer
  ManagedPolicyArns:
    Type: CommaDelimitedList
    Description: A comma-delimited list of managed policies for the role
    Default: ""
  PermissionsBoundaryArn:
    Type: String
    Description: Permission Boundary to set on the role
    Default: ""

Outputs:
  DeploymentRoleName:
    Value:
      Ref: DeploymentRole


Conditions:
  HasPermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - Ref: PermissionsBoundaryArn
          - ""
  HasManagedPolicyArns:
    Fn::Not:
      - Fn::Equals:
          - Fn::Join:
              - ","
              - Ref: ManagedPolicyArns
          - ""

Resources:
  DeploymentRole:
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        -   Action: sts:AssumeRole
            Effect: Allow
            Principal:
                AWS: 
                  Ref: ToolchainRoleArn
      Path: 
        Ref: RolePrefix
      Policies:
        - PolicyName: InlineToolchain
          PolicyDocument:
            Statement:
            - Action:
              - kms:Get*
              - kms:Decrypt
              - kms:Untag*
              - kms:Put*
              - kms:List*
              - kms:Tag*
              - kms:Encrypt
              - kms:Describe*
              - kms:Update*
              - kms:Delete*
              - kms:Create*
              Effect: Allow
              Resource:
                - Fn::Sub: "arn:${AWS::Partition}:kms:*:${AWS::AccountId}:alias/codeseeder-${ProjectName}-*"
              Sid: DeploymentKMSAlias
            - Action:
              - kms:ListKeys
              - kms:UpdateCustomKeyStore
              - kms:ListAliases
              - kms:CreateKey
              - kms:PutKeyPolicy
              - kms:Tag*
              - kms:Untag*
              - kms:ScheduleKey*
              - kms:DescribeKey
              - kms:CreateAlias
              - kms:DeleteAlias
              - kms:EnableKeyRotation
              Effect: Allow
              Resource: '*'
              Sid: DeploymentKMSKey
            - Action:
              - iam:Delete*
              - iam:Create*
              - iam:Get*
              - iam:Tag*
              - iam:Untag*
              - iam:Update*
              - iam:AttachRolePolicy
              - iam:PutRolePolicy
              - iam:Pass*
              - iam:DetachRolePolicy
              - iam:List*
              Effect: Allow
              Resource:
                - Fn::Sub: "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${ProjectName}-*"
                - Fn::Sub: "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/codeseeder-${ProjectName}-*"
                - Fn::Sub: "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${ProjectName}-*"
                - Fn::Sub: "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/codeseeder-${ProjectName}-*"
                - Fn::Sub: "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*/${ProjectName}-*"
                - Fn::Sub: "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*/codeseeder-${ProjectName}-*"
                - Fn::Sub: "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/*/${ProjectName}-*"
                - Fn::Sub: "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/*/codeseeder-${ProjectName}-*"
              Sid: DeploymentIAM
            - Action:
              - codebuild:Update*
              - codebuild:Batch*
              - codebuild:Create*
              - codebuild:Delete*
              - codebuild:StartBuild
              Effect: Allow
              Resource:
                Fn::Sub: "arn:${AWS::Partition}:codebuild:*:${AWS::AccountId}:project/codeseeder-${ProjectName}*"
              Sid: DeploymentCodeBuild
            - Action:
              - iam:ListPolicies
              - ssm:DescribeParameters
              - secretsmanager:ListSecretVersionIds
              - codebuild:ListProjects
              - cloudformation:Describe*
              - cloudformation:GetTemplate
              Effect: Allow
              Resource: '*'
              Sid: DeploymentListStuff
            - Action:
              - cloudformation:*
              Effect: Allow
              Resource:
                - Fn::Sub: "arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/${ProjectName}-*"
                - Fn::Sub: "arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/aws-codeseeder-${ProjectName}/*"
                - Fn::Sub: "arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/seedfarmer-${ProjectName}/*"
            - Action:
              - s3:Delete*
              - s3:Put*
              - s3:Get*
              - s3:Restore*
              - s3:Create*
              - s3:List*
              Effect: Allow
              Resource:
              - Fn::Sub: "arn:${AWS::Partition}:s3:::codeseeder-${ProjectName}*"
              - Fn::Sub: "arn:${AWS::Partition}:s3:::codeseeder-${ProjectName}*/*"
              - Fn::Sub: "arn:${AWS::Partition}:s3:::seedfarmer-${ProjectName}*"
              - Fn::Sub: "arn:${AWS::Partition}:s3:::seedfarmer-${ProjectName}*/*"              
              Sid: DeploymentS3
            - Action:
              - sts:AssumeRole
              - sts:TagSession
              - sts:GetSessionToken
              Effect: Allow
              Resource:
              - Fn::Sub: "arn:${AWS::Partition}:iam::*:role/${ProjectName}-*"
              - Fn::Sub: "arn:${AWS::Partition}:iam::*:role/*/${ProjectName}-*"
              Sid: DeploymentSTS
            - Action:
              - ssm:Put*
              - ssm:Delete*
              - ssm:Remove*
              - ssm:Add*
              - ssm:Describe*
              - ssm:Get*
              Effect: Allow
              Resource:
                Fn::Sub: "arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/${ProjectName}/*"
            - Effect: Allow
              Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:GetLogEvents
              - logs:GetLogRecord
              - logs:GetLogGroupFields
              - logs:GetQueryResults
              - logs:DescribeLogStreams
              Resource:
                Fn::Sub: "arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:/aws/codebuild/codeseeder-${ProjectName}*"
            - Action:
              - cloudformation:Create*
              - cloudformation:Execute*
              - cloudformation:DeleteStack
              Effect: Allow
              Resource:
                - Fn::Sub: "arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/aws-codeseeder-${ProjectName}*/*"
                - Fn::Sub: "arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/seedfarmer-${ProjectName}*/*" 
            - Action:
              - codeartifact:*
              Effect: Allow
              Resource:
                - Fn::Sub: "arn:${AWS::Partition}:codeartifact:*:${AWS::AccountId}:domain/aws-codeseeder-${ProjectName}"
                - Fn::Sub: "arn:${AWS::Partition}:codeartifact:*:${AWS::AccountId}:repository/aws-codeseeder-${ProjectName}*"
            - Action:
              - iam:CreateAccessKey
              - iam:CreateLoginProfile
              - iam:UpdateLoginProfile
              - iam:AddUserToGroup
              - iam:AttachGroupPolicy
              - iam:AttachUserPolicy
              - iam:CreatePolicyVersion
              - iam:DeleteGroupPolicy
              - iam:DeleteUserPolicy
              - iam:DetachGroupPolicy
              - iam:DetachUserPolicy
              - iam:PutGroupPolicy
              - iam:PutUserPolicy
              - iam:RemoveUserFromGroup
              - iam:SetDefaultPolicyVersion
              Effect: Deny
              Resource: '*'
              Sid: DeploymentIAMDeny
      ManagedPolicyArns:
        Fn::If:
          - HasManagedPolicyArns
          - Ref: ManagedPolicyArns
          - Ref: "AWS::NoValue"
      PermissionsBoundary:
        Fn::If:
          - HasPermissionsBoundary
          - Ref: PermissionsBoundaryArn
          - Ref: "AWS::NoValue"
      RoleName: 
        Ref: RoleName
      Tags:
        - Key: "SeedFarmer"
          Value: 
            Ref: SeedFarmerVersion
    Type: AWS::IAM::Role
